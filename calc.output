Terminals which are not used

   TOK_PRINTLN


Grammar

    0 $accept: prog $end

    1 prog: TOK_MAIN TOK_OPENCURL stmts TOK_CLOSECURL

    2 stmts: /* empty */
    3      | stmt TOK_SEMICOLON stmts

    4 stmt: TOK_INT_KEYWORD TOK_IDENTIFIER
    5     | TOK_FLOAT_KEYWORD TOK_IDENTIFIER
    6     | TOK_IDENTIFIER TOK_EQUAL expr
    7     | TOK_PRINTVAR TOK_IDENTIFIER

    8 expr: expr TOK_ADD expr
    9     | expr TOK_MUL expr
   10     | TOK_NUM_INT
   11     | TOK_NUM_FLOAT
   12     | TOK_IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
TOK_MAIN (258) 1
TOK_OPENCURL (259) 1
TOK_CLOSECURL (260) 1
TOK_PRINTVAR (261) 7
TOK_PRINTLN (262)
TOK_INT_KEYWORD (263) 4
TOK_FLOAT_KEYWORD (264) 5
TOK_NUM_INT (265) 10
TOK_NUM_FLOAT (266) 11
TOK_IDENTIFIER (267) 4 5 6 7 12
TOK_SEMICOLON (268) 3
TOK_ADD (269) 8
TOK_MUL (270) 9
TOK_EQUAL (271) 6


Nonterminals, with rules where they appear

$accept (17)
    on left: 0
prog (18)
    on left: 1, on right: 0
stmts (19)
    on left: 2 3, on right: 1 3
stmt (20)
    on left: 4 5 6 7, on right: 3
expr (21)
    on left: 8 9 10 11 12, on right: 6 8 9


state 0

    0 $accept: . prog $end

    TOK_MAIN  shift, and go to state 1

    prog  go to state 2


state 1

    1 prog: TOK_MAIN . TOK_OPENCURL stmts TOK_CLOSECURL

    TOK_OPENCURL  shift, and go to state 3


state 2

    0 $accept: prog . $end

    $end  shift, and go to state 4


state 3

    1 prog: TOK_MAIN TOK_OPENCURL . stmts TOK_CLOSECURL

    TOK_PRINTVAR       shift, and go to state 5
    TOK_INT_KEYWORD    shift, and go to state 6
    TOK_FLOAT_KEYWORD  shift, and go to state 7
    TOK_IDENTIFIER     shift, and go to state 8

    $default  reduce using rule 2 (stmts)

    stmts  go to state 9
    stmt   go to state 10


state 4

    0 $accept: prog $end .

    $default  accept


state 5

    7 stmt: TOK_PRINTVAR . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 11


state 6

    4 stmt: TOK_INT_KEYWORD . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 12


state 7

    5 stmt: TOK_FLOAT_KEYWORD . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 13


state 8

    6 stmt: TOK_IDENTIFIER . TOK_EQUAL expr

    TOK_EQUAL  shift, and go to state 14


state 9

    1 prog: TOK_MAIN TOK_OPENCURL stmts . TOK_CLOSECURL

    TOK_CLOSECURL  shift, and go to state 15


state 10

    3 stmts: stmt . TOK_SEMICOLON stmts

    TOK_SEMICOLON  shift, and go to state 16


state 11

    7 stmt: TOK_PRINTVAR TOK_IDENTIFIER .

    $default  reduce using rule 7 (stmt)


state 12

    4 stmt: TOK_INT_KEYWORD TOK_IDENTIFIER .

    $default  reduce using rule 4 (stmt)


state 13

    5 stmt: TOK_FLOAT_KEYWORD TOK_IDENTIFIER .

    $default  reduce using rule 5 (stmt)


state 14

    6 stmt: TOK_IDENTIFIER TOK_EQUAL . expr

    TOK_NUM_INT     shift, and go to state 17
    TOK_NUM_FLOAT   shift, and go to state 18
    TOK_IDENTIFIER  shift, and go to state 19

    expr  go to state 20


state 15

    1 prog: TOK_MAIN TOK_OPENCURL stmts TOK_CLOSECURL .

    $default  reduce using rule 1 (prog)


state 16

    3 stmts: stmt TOK_SEMICOLON . stmts

    TOK_PRINTVAR       shift, and go to state 5
    TOK_INT_KEYWORD    shift, and go to state 6
    TOK_FLOAT_KEYWORD  shift, and go to state 7
    TOK_IDENTIFIER     shift, and go to state 8

    $default  reduce using rule 2 (stmts)

    stmts  go to state 21
    stmt   go to state 10


state 17

   10 expr: TOK_NUM_INT .

    $default  reduce using rule 10 (expr)


state 18

   11 expr: TOK_NUM_FLOAT .

    $default  reduce using rule 11 (expr)


state 19

   12 expr: TOK_IDENTIFIER .

    $default  reduce using rule 12 (expr)


state 20

    6 stmt: TOK_IDENTIFIER TOK_EQUAL expr .
    8 expr: expr . TOK_ADD expr
    9     | expr . TOK_MUL expr

    TOK_ADD  shift, and go to state 22
    TOK_MUL  shift, and go to state 23

    $default  reduce using rule 6 (stmt)


state 21

    3 stmts: stmt TOK_SEMICOLON stmts .

    $default  reduce using rule 3 (stmts)


state 22

    8 expr: expr TOK_ADD . expr

    TOK_NUM_INT     shift, and go to state 17
    TOK_NUM_FLOAT   shift, and go to state 18
    TOK_IDENTIFIER  shift, and go to state 19

    expr  go to state 24


state 23

    9 expr: expr TOK_MUL . expr

    TOK_NUM_INT     shift, and go to state 17
    TOK_NUM_FLOAT   shift, and go to state 18
    TOK_IDENTIFIER  shift, and go to state 19

    expr  go to state 25


state 24

    8 expr: expr . TOK_ADD expr
    8     | expr TOK_ADD expr .
    9     | expr . TOK_MUL expr

    TOK_MUL  shift, and go to state 23

    $default  reduce using rule 8 (expr)


state 25

    8 expr: expr . TOK_ADD expr
    9     | expr . TOK_MUL expr
    9     | expr TOK_MUL expr .

    $default  reduce using rule 9 (expr)
